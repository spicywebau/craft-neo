{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n    this._uid = settings.uid\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name },\n\n  /**\n   * @public\n   * @since 3.7.0\n   * @returns this tab's UID\n   */\n  getUid () { return this._uid }\n})\n","import Garnish from 'garnish'\nimport Craft from 'craft'\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  field: null,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: null,\n  tabNames: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._field = settings.field\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabNames = settings.tabNames\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._html = settings.tabs?.html ?? ''\n    this._js = settings.tabs?.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs?.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabNames () { return this._tabNames },\n\n  /**\n   * @deprecated in 4.2.0\n   */\n  getTabs () { return this._tabs !== null ? Array.from(this._tabs) : null },\n\n  /**\n   * @deprecated in 4.2.0\n   */\n  async loadTabs () {\n    if (this._tabs !== null) {\n      return\n    }\n\n    NS.enter(this._field.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._field?.getSiteId(),\n      unsavedIds: this._field?.getUnsavedIds(),\n      blocks: [{\n        collapsed: false,\n        enabled: true,\n        level: 1,\n        ownerId: this._field?.getOwnerId(),\n        type: this._id\n      }]\n    }\n    NS.leave()\n\n    const renderedBlocks = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n    if (renderedBlocks.data.success) {\n      if (renderedBlocks.data.headHtml) {\n        Craft.appendHeadHtml(renderedBlocks.data.headHtml)\n      }\n\n      if (renderedBlocks.data.bodyHtml) {\n        Craft.appendBodyHtml(renderedBlocks.data.bodyHtml)\n      }\n\n      const tabs = renderedBlocks.data.blocks[0].tabs\n      this._tabs = tabs.tabNames?.map(\n        tab => new Tab({\n          name: tab,\n          uid: tabs.tabUids[tab]\n        })\n      ) ?? []\n      this._html = tabs.html\n      this._js = tabs.js\n    }\n  },\n\n  /**\n   * @since 4.2.0\n   */\n  async newBlock (settings = {}) {\n    NS.enter(this._field.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      fieldId: this._field?.getId(),\n      siteId: this._field?.getSiteId(),\n      unsavedIds: this._field?.getUnsavedIds(),\n      blocks: [Object.assign({\n        collapsed: false,\n        enabled: true,\n        level: 1,\n        ownerId: this._field?.getOwnerId(),\n        type: this._id\n      }, settings)]\n    }\n    NS.leave()\n    const response = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n\n    return response.data.blocks[0]\n  },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  tabs: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n  _tabs: null,\n  _html: null,\n  _js: null,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._blockHtml = settings.blockHtml\n    this._bodyHtml = settings.bodyHtml\n    this._headHtml = settings.headHtml\n    this._id = settings.id\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = this._blockHtml\n      ? $(this._blockHtml)\n      : this._field.$container.find(`[data-neo-b-id=${this._id}]`)\n    this._uuid = settings.uuid ?? this.$container.data('neo-b-uuid')\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n    this.resetButtons(settings.buttons)\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tabName of this._blockType.getTabNames()) {\n        const selector = `[data-neo-b-info=\"${tabName}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    if (callInitUiElements) {\n      Craft.appendBodyHtml(this._bodyHtml)\n      Craft.appendHeadHtml(this._headHtml)\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getHtml () {\n    return this._blockHtml.replace(/__NEOBLOCK__/g, this._id)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getJs () {\n    return this._bodyHtml.replace(/__NEOBLOCK__/g, this._id)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot?.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the block UUID\n   * @since 4.2.0\n   */\n  getUuid () {\n    return this._uuid\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    // Finally, only allow block types that are allowed to be created by the current user\n    // This is safe since allowedBlockTypes is only used to check if paste/add block actions should be disabled\n    allowedBlockTypes = allowedBlockTypes.filter((bt) => bt.isCreatableByUser())\n\n    const field = this._field.getName()\n    const maxBlocks = this._field.getMaxBlocks()\n    const additionalCheck = true\n    const maxTopBlocks = this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    const noAllowedBlockTypes = !allowedBlockTypes || allowedBlockTypes.length === 0\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const addDisabled = allDisabled || noAllowedBlockTypes\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n\n    // Paste/add actions should be hidden if there is no chance of them being enabled later\n    if (noAllowedBlockTypes) {\n      this.$menuContainer.find('[data-action=\"add\"]').parent().toggleClass('hidden', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').parent().toggleClass('hidden', pasteDisabled)\n    } else {\n      this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n    }\n\n    // If there are no visible items in the second list, hide the separator as well\n    this.$menuContainer.children('hr').toggleClass(\n      'hidden',\n      this.$menuContainer.children('ul:last-child').children('li:not(.hidden)').length === 0\n    )\n  },\n\n  resetButtons (settings) {\n    this.$blocksContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$childrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n\n    if (typeof settings !== 'undefined' && settings !== null) {\n      this._buttons = settings\n    } else {\n      this._buttons = new this._field.ButtonClass({\n        $ownerContainer: this.$container,\n        field: this._field,\n        items: this._blockType.getChildBlockItems(this._field.getItems()),\n        maxBlocks: this._field.getMaxBlocks()\n      })\n    }\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n\n      if (this._initialised) {\n        this._buttons.initUi()\n      }\n    }\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblockgrid_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblocklist_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n  _newBlockCount: 0,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._minBlocks = settings.minBlocks\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    const animate = !Garnish.prefersReducedMotion()\n    this._$spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : Craft.t('neo', 'Loading')}</div>`)\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this.ButtonClass = ButtonsGrid\n        break\n      case 'list':\n        this.ButtonClass = ButtonsList\n        break\n      default:\n        this.ButtonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(Object.assign({ field: this }, btInfo))\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this.ButtonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStart: () => {\n        this.$form.data('elementEditor')?.pause()\n      },\n      onDragStop: () => {\n        this.$form.data('elementEditor')?.resume()\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = blockType\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      $block.data('block', block)\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Create any required top level blocks, if this field has only one top level block type\n    if (this._minBlocks > 0) {\n      const missingBlockCount = this._minBlocks - this._blocks.length\n      const topLevelBlockTypes = this.getBlockTypes(true)\n\n      if (topLevelBlockTypes.length === 1 && missingBlockCount > 0) {\n        for (let i = this._blocks.length; i < this._minBlocks; i++) {\n          this['@newBlock']({\n            blockType: topLevelBlockTypes[0],\n            createChildBlocks: false,\n            index: i,\n            level: 1\n          })\n        }\n      }\n    }\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  /**\n   * @public\n   * @returns the field's ID\n   * @since 4.2.0\n   */\n  getId () {\n    return this._id\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null, createChildBlocks = true) {\n    this._newBlockCount++\n    this.$form.data('elementEditor')?.pause()\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    block.$container.data('block', block)\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Construct the block's visible layout elements, since they might not be the default visible\n    // layout elements for the block type, e.g. if pasting a block\n    const visibleLayoutElements = {}\n    block.$contentContainer.children('[data-layout-tab]').each((_, layoutTab) => {\n      const tabUid = layoutTab.getAttribute('data-layout-tab')\n      visibleLayoutElements[tabUid] = []\n      layoutTab.querySelectorAll(':scope > [data-layout-element]:not([data-layout-element-placeholder])')\n        .forEach((layoutElement) => {\n          visibleLayoutElements[tabUid].push(layoutElement.getAttribute('data-layout-element'))\n        })\n    })\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Create any required child blocks, if this block has only one child block type\n    const createChildBlocksIfAllowed = () => {\n      if (createChildBlocks) {\n        const blockType = block.getBlockType()\n        const minChildBlocks = blockType.getMinChildBlocks()\n\n        if (minChildBlocks > 0) {\n          let childBlockTypes = blockType.getChildBlocks()\n\n          if (childBlockTypes === '*') {\n            childBlockTypes = this.getBlockTypes()\n          }\n\n          if (childBlockTypes.length === 1) {\n            const childBlockType = this.getBlockTypeByHandle(childBlockTypes[0])\n\n            for (let i = 0; i < minChildBlocks; i++) {\n              this['@newBlock']({\n                blockType: childBlockType,\n                createChildBlocks: false,\n                index: index + i + 1,\n                level: level + 1\n              })\n            }\n          }\n        }\n      }\n\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => {\n          Garnish.scrollContainerToElement(block.$container)\n          createChildBlocksIfAllowed()\n        }))\n    } else {\n      createChildBlocksIfAllowed()\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return $($block).data('block')\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  /**\n   * @since 3.9.2\n   */\n  getNamespace () {\n    return Array.from(this._templateNs)\n  },\n\n  /**\n   * @since 3.9.3\n   */\n  getOwnerId () {\n    return this._ownerId\n  },\n\n  /**\n   * @since 3.9.5\n   */\n  getSiteId () {\n    return this._siteId\n  },\n\n  /**\n   * @since 4.2.4\n   */\n  getUnsavedIds () {\n    return this.$blocksContainer.find('.ni_block[data-neo-b-id^=\"new\"]')\n      .map((_, element) => element.getAttribute('data-neo-b-id').substring(3))\n      .get()\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(\n      () => this.$form.data('elementEditor')?.on('update', () => this._updateAllVisibleElements()),\n      200\n    )\n  },\n\n  async _updateAllVisibleElements () {\n    const checkNumber = Math.floor(Math.random() * 1000000)\n    this._lastFormCheck = checkNumber\n    const elementEditor = this.$form.data('elementEditor')\n\n    // Do nothing if the draft is being resaved, or there's no element editor data\n    if (elementEditor?.submittingForm ?? true) {\n      return\n    }\n\n    // Don't update visible elements if the draft save was the result of creating a new block\n    if (this._newBlockCount > 0) {\n      this._newBlockCount--\n      return\n    }\n\n    const siteId = elementEditor.settings.siteId\n    NS.enter(this.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      blocks: {},\n      sortOrder: [],\n      fieldId: this._id,\n      ownerCanonicalId: this._ownerId,\n      ownerDraftId: elementEditor.settings.draftId,\n      isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n      siteId\n    }\n    NS.leave()\n    const originalBlockIds = {}\n    this._blocks.forEach((block) => {\n      const selectedTabId = block.$contentContainer\n        .children('[data-layout-tab]:not(.hidden)')\n        .data('layout-tab')\n      data.blocks[block.getDuplicatedBlockId()] = {\n        selectedTab: selectedTabId ?? null,\n        visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n      }\n      data.sortOrder.push(block.getDuplicatedBlockId())\n      originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n    })\n\n    try {\n      const response = await Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n\n      // Ignore the response if the form has since been edited\n      if (this._lastFormCheck !== checkNumber) {\n        return\n      }\n\n      for (const blockId in response.data.blocks) {\n        const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n        this._updateVisibleElements(\n          block,\n          response.data.blocks[blockId],\n          data.blocks[block.getDuplicatedBlockId()].selectedTabId\n        )\n      }\n    } catch (err) {\n      Craft.cp.displayError(err)\n      throw err\n    }\n  },\n\n  /**\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const html = elementInfo.html.replaceAll('__NEOBLOCK__', block.getId())\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            if ($newElement.hasClass('ni_child-blocks-ui-element')) {\n              block.resetButtons()\n            }\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n\n      if (changedElements) {\n        this._updateButtons()\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml.replaceAll('__NEOBLOCK__', block.getId()))\n    Craft.appendBodyHtml(blockData.bodyHtml.replaceAll('__NEOBLOCK__', block.getId()))\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _addSpinnerAfter (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.after(this._$spinner)\n    } else {\n      this.$blocksContainer.prepend(this._$spinner)\n    }\n\n    this._animateSpinner()\n  },\n\n  _addSpinnerBefore (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.before(this._$spinner)\n    } else {\n      this.$blocksContainer.append(this._$spinner)\n    }\n\n    this._animateSpinner()\n  },\n\n  _animateSpinner () {\n    if (Garnish.prefersReducedMotion()) {\n      return Promise.resolve()\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        this._$spinner\n          .css({\n            opacity: 0,\n            marginBottom: -(this._$spinner.outerHeight())\n          })\n          .velocity({\n            opacity: 1,\n            marginBottom: 10\n          }, 'fast', () => resolve())\n      } catch (err) {\n        reject(err)\n      }\n    })\n  },\n\n  _removeSpinner () {\n    this._$spinner.remove()\n  },\n\n  async _duplicate (data, block) {\n    data.unsavedIds = this.getUnsavedIds()\n    try {\n      this.$form.data('elementEditor')?.pause()\n      await this._addSpinnerAfter(block)\n      const response = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n      const newBlocks = []\n\n      for (const renderedBlock of response.data.blocks) {\n        const newBlockId = renderedBlock.id\n        const newBlock = new Block({\n          namespace: [...this._templateNs, newBlockId],\n          field: this,\n          blockType: this.getBlockTypeById(renderedBlock.type),\n          blockHtml: renderedBlock.blockHtml,\n          bodyHtml: renderedBlock.bodyHtml,\n          headHtml: renderedBlock.headHtml,\n          id: newBlockId,\n          uuid: renderedBlock.uuid,\n          level: renderedBlock.level | 0,\n          enabled: !!renderedBlock.enabled,\n          collapsed: !!renderedBlock.collapsed,\n          showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n          showBlockTypeHandle: this._showBlockTypeHandles\n        }, true)\n\n        newBlocks.push(newBlock)\n      }\n\n      let newIndex = this._getNextBlockIndex(block)\n\n      for (const newBlock of newBlocks) {\n        this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n      }\n\n      if (!Garnish.prefersReducedMotion() && newBlocks.length > 0) {\n        const firstBlock = newBlocks[0]\n\n        firstBlock.$container\n          .css({\n            opacity: 0,\n            marginBottom: this._$spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n          })\n          .velocity({\n            opacity: 1,\n            marginBottom: 10\n          }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n      }\n    } catch (err) {\n      Craft.cp.displayError(err.message)\n    } finally {\n      this._removeSpinner()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  async '@newBlock' (e) {\n    const elementEditor = this.$form.data('elementEditor')\n\n    try {\n      elementEditor?.pause()\n      const level = e.level ?? 1\n      const loopStartingPoint = typeof e.index !== 'undefined'\n        ? Math.min(e.index - 1, this._blocks.length - 1)\n        : this._blocks.length - 1\n      let siblingBlock\n      let addAfter = true\n\n      for (let i = loopStartingPoint; i >= 0; i--) {\n        // Look for the previous block at the same level as the new block, to add the spinner after\n        if (this._blocks[i].getLevel() === level) {\n          siblingBlock = this._blocks[i]\n          break\n        }\n\n        // If we've gone to a lower level, any future block we find at the same level won't be a\n        // sibling of the new block, so we need to add the spinner before the last block we checked\n        if (this._blocks[i].getLevel() < level) {\n          siblingBlock = this._blocks[i + 1]\n          addAfter = false\n          break\n        }\n      }\n\n      if (addAfter) {\n        await this._addSpinnerAfter(siblingBlock)\n      } else {\n        await this._addSpinnerBefore(siblingBlock)\n      }\n\n      const prevSiblingId = addAfter ? siblingBlock?.getDuplicatedBlockId() : null\n      const parentId = siblingBlock?.getParent()?.getDuplicatedBlockId() ?? null\n      const newBlock = await e.blockType.newBlock({\n        prevSiblingId: prevSiblingId ?? null,\n        parentId,\n        level,\n        ownerId: elementEditor?.settings.elementId ?? this._ownerId\n      })\n      const blockId = newBlock.id\n      const block = new Block({\n        namespace: [...this._templateNs, blockId],\n        field: this,\n        blockType: e.blockType,\n        id: blockId,\n        uuid: newBlock.uuid,\n        blockHtml: newBlock.blockHtml,\n        bodyHtml: newBlock.bodyHtml,\n        headHtml: newBlock.headHtml,\n        showButtons: !this.atMaxLevels(e.level),\n        showBlockTypeHandle: this._showBlockTypeHandles\n      }, true)\n\n      this._removeSpinner()\n      this.addBlock(block, e.index, e.level, e.createChildBlocks, e.createChildBlocks)\n    } catch (error) {\n      this._removeSpinner()\n      console.error(error)\n      Craft.cp.displayError(error.message)\n    } finally {\n      elementEditor?.resume()\n    }\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this.ButtonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n\n        // Ensure the block data has the current owner ID\n        pasteBlock.ownerId = this._ownerId\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        fieldId: this._id,\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      fieldId: this._id,\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","arguments","length","undefined","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","extend","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","_uid","uid","getErrors","getName","getUid","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","tabNames","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_settings$tabs$html","_settings$tabs","_settings$tabs$js","_settings$tabs2","_settings$tabs$visibl","_settings$tabs3","_settings$tabs$tabNam","_settings$tabs$tabNam2","_id","_field","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabNames","_tabs","map","tab","Tab","tabUids","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabNames","getTabs","loadTabs","_this$_field","_this$_field2","_this$_field3","NS","namespace","siteId","getSiteId","unsavedIds","getUnsavedIds","collapsed","level","ownerId","getOwnerId","renderedBlocks","success","_tabs$tabNames$map","_tabs$tabNames","headHtml","bodyHtml","newBlock","_this$_field4","_this$_field5","_this$_field6","_this$_field7","fieldId","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","_objectSpread","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","insertAt","index","$parent","eq","buttons","modified","showButtons","showBlockTypeHandle","_escapeMap","_escapeHTML","str","s","_limit","l","_templateNs","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","_settings$uuid","_blockHtml","blockHtml","_bodyHtml","_headHtml","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","concat","_uuid","uuid","$neo","$bodyContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","resetButtons","hasErrors","tabName","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","initUi","_this$_buttons","callInitUiElements","initTabs","_settingsMenu","on","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","_buttons","updateResponsiveness","e","parents","_","cbuiElement","$tabContent","tabIndex","add","isNew","_level","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","addFieldLinks","trigger","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","_this$$foot","$foot","remove","clearInterval","_detectChangeInterval","disconnect","getUuid","getDuplicatedBlockId","_this$$form$data$dupl","_this$$form$data","duplicatedElements","isTopLevel","val","setModified","isModified","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","_blocks","blockParent","currentBlock","_blocks2","currentLevel","getSiblings","_blocks3","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","_this$$form$data2","sentBlockId","isProvisionalDraft","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","$buttonsContainer","$childrenWarningsContainer","selectTab","tabUid","attr","retryAll","_this$_topbarLeftWidt","_this$_topbarRightWid","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","_this$getParent","_parentBlockType$getC","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","getMaxTopBlocks","noAllowedBlockTypes","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","addDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","_pasteData$blocks$len","_pasteData$blocks","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","$collapsedChildrenContainer","ButtonClass","$ownerContainer","getItems","namespaceId","namespacedId","toggle","_toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","_this$$form$data3","_this$$form$data4","pause","resume","currentTarget","blockTypes","groups","NewBlockMenu","constructor","_defineProperty","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","_this$$ownerContainer","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","additionalCheck","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","ButtonsGrid","_ref","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","_visibleLayoutElements","_newBlockCount","_groups","gInfo","Group","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","_$spinner","newBlockMenuStyle","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","parseInt","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","missingBlockCount","topLevelBlockTypes","createChildBlocks","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_this$_tempButtons","_block$getButtons","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","layoutTab","getAttribute","querySelectorAll","layoutElement","createChildBlocksIfAllowed","childBlockTypes","childBlockType","marginBottom","_this$$form$data5","_delayAnimate","_findChildBlocks","off","finishTheRemoval","_this$$form$data6","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","_this$$form$data7","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","_this$$form$data8","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","element","substring","_this","tabData","bar","tabErrors","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_this$_tempButtons2","_tempButtonsBlock","_block$getButtons2","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","_this$$form$data9","_updateAllVisibleElements","_elementEditor$submit","checkNumber","floor","random","_lastFormCheck","submittingForm","ownerCanonicalId","ownerDraftId","originalBlockIds","_this$_visibleLayoutE","selectedTabId","selectedTab","response","_updateVisibleElements","err","displayError","blockData","_blockData$tabs$match","_blockData$tabs","$allTabContainers","changedElements","missingElements","tabInfo","class","appendTo","j","elements","elementInfo","replaceAll","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","$tabsHtml","empty","initialDeltaValues","_addSpinnerAfter","_animateSpinner","_addSpinnerBefore","_removeSpinner","_duplicate","_this$$form$data10","newBlocks","renderedBlock","newBlockId","newIndex","firstBlock","message","_this$$form$data11","_e$level","_siblingBlock","_siblingBlock$getPare","_siblingBlock2","_elementEditor$settin","loopStartingPoint","siblingBlock","addAfter","prevSiblingId","parentId","elementId","error","console","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","displayNotice","n","_block$getLevel","baseLevel","blockIndex","subBlocks","getBlockData","context","_window","inputs","Neo","Input","createInput"],"sourceRoot":""}